ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = color)
df <- data.frame(days = seq(as.Date("1955-01-01"), as.Date("2011-12-31"), by = "days")) |>
mutate(year = year(days),
month = month(days, label = TRUE)) |>
group_by(year, month) |>
count(month) |>
mutate(count = 1,
timeline = factor(case_when(year == 1955 & month == "Feb" ~ "Born San Francisco",
year == 1973 & month == "Dec" ~ "Reed Colllege",
year == 1975 & month == "Jan" ~ "Apple 1 Computer",
year == 1976 & month == "Apr" ~ "Founding Apple Inc.",
year == 1984 & month == "Jan" ~ "Macintosh",
year == 1985 & month == "July" ~ "Leaves Apple",
year == 1986 & month == "Dec" ~ "Pixar",
year == 1991 & month == "Mar" ~ "Marriage",
year == 1996 & month == "Dec" ~ "Apple buys NeXT $400M",
year == 2000 & month == "Jan" ~ "CEO Apple",
year == 2001 & month == "Oct" ~ "iPod",
year == 2005 & month == "May" ~ "Stanford University",
year == 2005 & month == "May" ~ "Stanford University",
year == 2007 & month == "June" ~ "iPhone",
year == 2009 & month == "Jan" ~ "Medical leave",
year == 2010 & month == "Jan" ~ "iPad",
year == 2011 & month == "Aug" ~ "Resigns as CEO of Apple",
year == 2011 & month == "Oct" ~ "Passes Away",
year == 1955 & month == "Jan" ~ "NA",
year == 2011 & month %in% c("Nov", "Dec") ~ "NA",
TRUE ~ "not relevant")),
color = factor(case_when(timeline == "NA" ~ "dark grey",
timeline == "not relevant" ~ "grey",
!timeline %in% c("NA", "not relevant") ~ "pink"))) |>
ungroup()
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = color)
df |> group_by(timeline) |>  distinct(color)
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = c(color, "grey"))
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal()
df <- data.frame(days = seq(as.Date("1955-01-01"), as.Date("2011-12-31"), by = "days")) |>
mutate(year = year(days),
month = month(days, label = TRUE)) |>
group_by(year, month) |>
count(month) |>
mutate(count = 1,
timeline = factor(case_when(year == 1955 & month == "Feb" ~ "Born San Francisco",
year == 1973 & month == "Dec" ~ "Reed Colllege",
year == 1975 & month == "Jan" ~ "Apple 1 Computer",
year == 1976 & month == "Apr" ~ "Founding Apple Inc.",
year == 1984 & month == "Jan" ~ "Macintosh",
year == 1985 & month == "July" ~ "Leaves Apple",
year == 1986 & month == "Dec" ~ "Pixar",
year == 1991 & month == "Mar" ~ "Marriage",
year == 1996 & month == "Dec" ~ "Apple buys NeXT $400M",
year == 2000 & month == "Jan" ~ "CEO Apple",
year == 2001 & month == "Oct" ~ "iPod",
year == 2005 & month == "May" ~ "Stanford University",
year == 2005 & month == "May" ~ "Stanford University",
year == 2007 & month == "June" ~ "iPhone",
year == 2009 & month == "Jan" ~ "Medical leave",
year == 2010 & month == "Jan" ~ "iPad",
year == 2011 & month == "Aug" ~ "Resigns as CEO of Apple",
year == 2011 & month == "Oct" ~ "Passes Away",
year == 1955 & month == "Jan" ~ "NA",
year == 2011 & month %in% c("Nov", "Dec") ~ "NA",
TRUE ~ "not relevant")),
color = factor(case_when(timeline == "NA" ~ "dark grey",
timeline == "not relevant" ~ "grey",
!timeline %in% c("NA", "not relevant") ~ "pink"))) |>
ungroup()
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = color)
df <- data.frame(days = seq(as.Date("1955-01-01"), as.Date("2011-12-31"), by = "days")) |>
mutate(year = year(days),
month = month(days, label = TRUE)) |>
group_by(year, month) |>
count(month) |>
mutate(count = 1,
timeline = factor(case_when(year == 1955 & month == "Feb" ~ "Born San Francisco",
year == 1973 & month == "Dec" ~ "Reed Colllege",
year == 1975 & month == "Jan" ~ "Apple 1 Computer",
year == 1976 & month == "Apr" ~ "Founding Apple Inc.",
year == 1984 & month == "Jan" ~ "Macintosh",
year == 1985 & month == "July" ~ "Leaves Apple",
year == 1986 & month == "Dec" ~ "Pixar",
year == 1991 & month == "Mar" ~ "Marriage",
year == 1996 & month == "Dec" ~ "Apple buys NeXT $400M",
year == 2000 & month == "Jan" ~ "CEO Apple",
year == 2001 & month == "Oct" ~ "iPod",
year == 2005 & month == "May" ~ "Stanford University",
year == 2005 & month == "May" ~ "Stanford University",
year == 2007 & month == "June" ~ "iPhone",
year == 2009 & month == "Jan" ~ "Medical leave",
year == 2010 & month == "Jan" ~ "iPad",
year == 2011 & month == "Aug" ~ "Resigns as CEO of Apple",
year == 2011 & month == "Oct" ~ "Passes Away",
year == 1955 & month == "Jan" ~ "NA",
year == 2011 & month %in% c("Nov", "Dec") ~ "NA",
TRUE ~ "not relevant")),
color = factor(case_when(timeline == "NA" ~ "dark grey",
timeline == "not relevant" ~ "grey",
!timeline %in% c("NA", "not relevant") ~ "pink",
TRUE ~ "grey"))) |>
ungroup()
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = color)
df <- data.frame(days = seq(as.Date("1955-01-01"), as.Date("2011-12-31"), by = "days")) |>
mutate(year = year(days),
month = month(days, label = TRUE)) |>
group_by(year, month) |>
count(month) |>
mutate(count = 1,
timeline = factor(case_when(year == 1955 & month == "Feb" ~ "Born San Francisco",
year == 1973 & month == "Dec" ~ "Reed Colllege",
year == 1975 & month == "Jan" ~ "Apple 1 Computer",
year == 1976 & month == "Apr" ~ "Founding Apple Inc.",
year == 1984 & month == "Jan" ~ "Macintosh",
year == 1985 & month == "July" ~ "Leaves Apple",
year == 1986 & month == "Dec" ~ "Pixar",
year == 1991 & month == "Mar" ~ "Marriage",
year == 1996 & month == "Dec" ~ "Apple buys NeXT $400M",
year == 2000 & month == "Jan" ~ "CEO Apple",
year == 2001 & month == "Oct" ~ "iPod",
year == 2005 & month == "May" ~ "Stanford University",
year == 2005 & month == "May" ~ "Stanford University",
year == 2007 & month == "June" ~ "iPhone",
year == 2009 & month == "Jan" ~ "Medical leave",
year == 2010 & month == "Jan" ~ "iPad",
year == 2011 & month == "Aug" ~ "Resigns as CEO of Apple",
year == 2011 & month == "Oct" ~ "Passes Away",
year == 1955 & month == "Jan" ~ "NDF",
year == 2011 & month %in% c("Nov", "Dec") ~ "NDF",
TRUE ~ "not relevant")),
color = factor(if_else(!timeline %in% c("NDF", "not relevant"), "pink", "grey"))) |>
ungroup()
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = color)
df |> distinct(color)
df |> group_by(timeline) |> distinct(color)
scale_fill_manual(values = c(color, "yellow")
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = c(color, "yellow"))
df |>
ggplot(aes(fill = timeline, values = count)) +
geom_waffle(size = .1, n_rows = 12, color = "white", flip = TRUE) +#multiplyer the same as n_rows
coord_equal() +
scale_y_continuous(expand = c(0,0)) +
theme_minimal() +
scale_fill_manual(values = c(color, "yellow"))
library(tidyverse)
data(mtcars)
library(tidyverse)
mtcars |> glimpse()
library(shiny); runApp('Desktop/MCI/DNA project/DNA NEW WRANGLING CODE/TEST_app.R')
library(shiny); runApp('Desktop/MCI/DNA project/DNA NEW WRANGLING CODE/TEST_app.R')
shiny::runApp('Desktop/app')
runApp('Desktop/app')
runApp()
runApp('Desktop/app')
runApp('Desktop/app')
runApp('Desktop/app')
runApp()
runApp('Desktop/app')
runApp('Desktop/app')
runApp('Desktop/app')
runApp('Desktop/app')
source("~/Desktop/Github/Tidytuesday/tidytuesday/2021/R/2021_48_drwho.R", echo=TRUE)
if("comfort of conviction" > "discomfort of doubt") {
print("think again")
}
if("comfort of conviction" > "discomfort of doubt") {
print("think again")
}
if("a" > "b") {
print("think again")
}
if("a" > "b") {
print("think again")
}
if("a" == "b") {
print("think again")
}
if("a" == "a") {
print("think again")
}
if(a_df == b_df) {
print("think again")
}
d_df <- 2
if(a_df == b_df) {
print("think again")
}
a_df <- 1
d_df <- 2
if(a_df == b_df) {
print("think again")
}
b_df <- 2
if(a_df == b_df) {
print("think again")
}
p_load(tidyverse)
source("~/Desktop/Github/Tidytuesday/tidytuesday/2021/week_49/2021_49_cricket.R", echo=TRUE)
tt <- tt_load('2021-11-30')
tt$winner |> View()
tt$winner
tt <- tt_load('2021-11-30')
tt$winner
tt
tt
install.packages("tidytuesdayR")
install.packages("tidytuesdayR")
p_load(tidyverse, tidytuesdayR)
tt <- tt_load('2021-11-30')
tt
tt$winners
tuesdata <- tidytuesdayR::tt_load(2021, week = 49)
tuesdata <- tidytuesdayR::tt_load('2021-11-30')
tuesdata
tuesdata$matches
tuesdata$matches |> View()
tt$matches |> View()
matches <- tt$matches
matches |>
count(winner)
tt <- tidytuesdayR::tt_load('2021-11-30')
matches <- tt$matches
matches |>
count(winner)
library(pacman)
p_load(tidyverse, tidytuesdayR)
matches |>
count(winner)
matches |>
count(winner, sort = TRUE)
Matches |> View()
matches |> View()
matches |> count(match_id)
library(pacman)
p_load(tidyverse, janitor, scales, ggpattern, titanic)
titanic <- titanic_train |>
clean_names()
titanic |>
glimpse()
setwd("~/Desktop/Github/Tidytuesday/tidytuesday/2022/week_1")
source("~/Desktop/Github/Tidytuesday/tidytuesday/2022/week_1/2022_1_BYOD.R", echo=TRUE)
?ggsave
ggsave("tidytuesday_2022_w1.png", width = 1080, height = 1080, units = "px", dpi = 320)
ggdraw(plot) +
draw_image("messi.png",
x = 1.50, y = .55,
hjust = 4.2, vjust = .45,
width = 0.2, height = 0.2) +
theme_grey(base_size = 5)
ggsave("tidytuesday_2022_w1.png", width = 1080, height = 1080, units = "px", dpi = 320,
scale = )
ggsave("tidytuesday_2022_w1.png", width = 1080, height = 1080, units = "px", dpi = 320)
plot <- plot +
theme(base_size = 4)
plot
plot <- plot +
theme_grey(base_size = 4)
plot
ggdraw(plot) +
draw_image("messi.png",
x = 1.50, y = .55,
hjust = 4.2, vjust = .45,
width = 0.2, height = 0.2)
ggsave("tidytuesday_2022_w1.png", width = 1080, height = 1080, units = "px", dpi = 320)
plot <- plot +
theme(base_size = 4)
plot
plot <- plot +
scale_fill_manual(values = c("grey75", "#A50044")) +
scale_color_manual(values = c("grey75", "#A50044")) +
labs(x = "Players total goals scored",
title = "Messi, La Liga all-time top scorer: 474 goals",
subtitle = "Number of La Liga top scorers by goals, 1928/29 - 2020/21",
caption = "Visualization by Pablo Alvarez | Data from Transfermarkt") +
theme_minimal(base_family = "Lato") +
theme(plot.margin = margin(10, 12, 10, 12),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "grey85"),
panel.grid.major.y = element_blank(),
panel.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
plot.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.line.x = element_line(size = .4, colour = "grey50"),
axis.ticks.length.x = unit(10, "pt"),
axis.ticks.x = element_line(size = .4, colour = "grey85"),
axis.text.x = element_text(margin = margin(t = 5),
color = "grey50", size = 12),
axis.title.x = element_text(margin = margin(t = 20),
color = "black", face = "bold", size = 14,
family = "Lato Black (900)"),
plot.title = element_text(
size = 32,
margin = margin(t = 15),
face = "bold",
family = "Lato Black (900)"
),
plot.subtitle = element_text(
size = 18,
margin = margin(t = 20, b = 20)
),
plot.caption = element_text(
color = "grey50",
hjust = .5,
size = 10,
margin = margin(t = 15, b = 5)
)
)
plot <- df |>
ggplot(aes(goles, fill = group, color = group)) +
geom_dotplot(binwidth = 6,
method = "histodot",
stackratio = 1.2,
dotsize = .8,
show.legend = FALSE) +
scale_x_continuous(limits = c(40, 510),
breaks = seq(0, 500, by = 50),
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.005))
plot <- plot +
geom_curve(x = 445, y = .5,
xend = 478, yend = .03,
color = "grey50",
size = .6,
curvature = -.3,
angle = 90,
arrow = arrow(length = unit(0.25,"cm"))) +
geom_curve(x = 275, y = .3,
xend = 312, yend = .03,
color = "grey75",
size = .6,
curvature = -.3,
angle = 90,
arrow = arrow(length = unit(0.25,"cm"))) +
geom_shadowtext(aes(x = 275, y = .32, label = "Cristiano Ronaldo"),
color = "grey65", size = 4, family = "Lato", bg.colour = "white", bg.r = .2)
plot <- plot +
scale_fill_manual(values = c("grey75", "#A50044")) +
scale_color_manual(values = c("grey75", "#A50044")) +
labs(x = "Players total goals scored",
title = "Messi, La Liga all-time top scorer: 474 goals",
subtitle = "Number of La Liga top scorers by goals, 1928/29 - 2020/21",
caption = "Visualization by Pablo Alvarez | Data from Transfermarkt") +
theme_minimal(base_family = "Lato") +
theme(plot.margin = margin(10, 12, 10, 12),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "grey85"),
panel.grid.major.y = element_blank(),
panel.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
plot.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.line.x = element_line(size = .4, colour = "grey50"),
axis.ticks.length.x = unit(10, "pt"),
axis.ticks.x = element_line(size = .4, colour = "grey85"),
axis.text.x = element_text(margin = margin(t = 5),
color = "grey50", size = 12),
axis.title.x = element_text(margin = margin(t = 20),
color = "black", face = "bold", size = 14,
family = "Lato Black (900)"),
plot.title = element_text(
size = 32,
margin = margin(t = 15),
face = "bold",
family = "Lato Black (900)"
),
plot.subtitle = element_text(
size = 18,
margin = margin(t = 20, b = 20)
),
plot.caption = element_text(
color = "grey50",
hjust = .5,
size = 10,
margin = margin(t = 15, b = 5)
)
)
ggdraw(plot) +
draw_image("messi.png",
x = 1.50, y = .55,
hjust = 4.2, vjust = .45,
width = 0.2, height = 0.2)
ggsave("tidytuesday_2022_w1.png", width = 10, height = 8.5, units = "px", dpi = 320, scale = 2)
ggsave("tidytuesday_2022_w1.png", width = 10, height = 8.5, units = "px", dpi = 320, scale = 2)
df <- data_raw |>
clean_names() |>
drop_na() |>
select(jugadores, goles) |>
mutate(group = factor(if_else(jugadores != "Lionel Messi", 0, 1)))
plot <- df |>
ggplot(aes(goles, fill = group, color = group)) +
geom_dotplot(binwidth = 6,
method = "histodot",
stackratio = 1.2,
dotsize = .8,
show.legend = FALSE) +
scale_x_continuous(limits = c(40, 510),
breaks = seq(0, 500, by = 50),
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.005))
plot <- plot +
geom_curve(x = 445, y = .5,
xend = 478, yend = .03,
color = "grey50",
size = .6,
curvature = -.3,
angle = 90,
arrow = arrow(length = unit(0.25,"cm"))) +
geom_curve(x = 275, y = .3,
xend = 312, yend = .03,
color = "grey75",
size = .6,
curvature = -.3,
angle = 90,
arrow = arrow(length = unit(0.25,"cm"))) +
geom_shadowtext(aes(x = 275, y = .32, label = "Cristiano Ronaldo"),
color = "grey65", size = 4, family = "Lato", bg.colour = "white", bg.r = .2)
plot <- plot +
scale_fill_manual(values = c("grey75", "#A50044")) +
scale_color_manual(values = c("grey75", "#A50044")) +
labs(x = "Players total goals scored",
title = "Messi, La Liga all-time top scorer: 474 goals",
subtitle = "Number of La Liga top scorers by goals, 1928/29 - 2020/21",
caption = "Visualization by Pablo Alvarez | Data from Transfermarkt") +
theme_minimal(base_family = "Lato") +
theme(plot.margin = margin(10, 12, 10, 12),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "grey85"),
panel.grid.major.y = element_blank(),
panel.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
plot.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.line.x = element_line(size = .4, colour = "grey50"),
axis.ticks.length.x = unit(10, "pt"),
axis.ticks.x = element_line(size = .4, colour = "grey85"),
axis.text.x = element_text(margin = margin(t = 5),
color = "grey50", size = 12),
axis.title.x = element_text(margin = margin(t = 20),
color = "black", face = "bold", size = 14,
family = "Lato Black (900)"),
plot.title = element_text(
size = 32,
margin = margin(t = 15),
face = "bold",
family = "Lato Black (900)"
),
plot.subtitle = element_text(
size = 18,
margin = margin(t = 20, b = 20)
),
plot.caption = element_text(
color = "grey50",
hjust = .5,
size = 10,
margin = margin(t = 15, b = 5)
)
)
ggdraw(plot) +
draw_image("messi.png",
x = 1.50, y = .55,
hjust = 4.2, vjust = .45,
width = 0.2, height = 0.2)
ggsave("tidytuesday_2022_w1.png", width = 10, height = 8.5, units = "px", dpi = 320, scale = 2)
ggsave("tidytuesday_2022_w1.png", width = 10, height = 8.5, units = "px", dpi = 320, scale = 5)
ggsave("tidytuesday_2022_w1.png", width = 10, height = 8.5, units = "px", dpi = 320, scale = .5)
source("~/Desktop/Github/Tidytuesday/tidytuesday/2022/week_1/2022_1_BYOD.R", echo=TRUE)
source("~/Desktop/Github/Tidytuesday/tidytuesday/2022/week_1/2022_1_BYOD.R", echo=TRUE)
